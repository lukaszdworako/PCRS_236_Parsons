/*global $ *//**
 * Sets the map's click navigation functionality (Users can point and click
 * to go where the want in the graph).
 */function setMapClickNavigation(){"use strict";var e=$("#graph-view"),t=$("#nav-graph"),n=$("#map"),r=$("#graph"),i=$("#scroll-content");n.click(function(s){var o,u,a=$(this).offset(),f=s.clientX-a.left,l=s.clientY-a.top;f+parseFloat(e.width())/2<parseFloat(t.width())?f-parseFloat(e.width())/2>0?o=f-parseFloat(e.width())/2:o=0:o=parseFloat(parseFloat(t.width()))-parseFloat(e.width()),l+parseFloat(e.height())/2<parseFloat(n.height())?l-parseFloat(e.height())/2>0?u=l-parseFloat(e.height())/2:u=0:u=parseFloat(parseFloat(n.height()))-parseFloat(e.height()),e.animate({left:o}),e.css({top:u});var c=[u/parseFloat(t.height())*parseFloat(r.height()),o/parseFloat(t.css("width"))*parseFloat(r.css("width"))];i.mCustomScrollbar("scrollTo",c,{callbacks:!1,scrollInertia:250})})};/*global $ *//**
 * Sets the map drag functionality (Users can control the graph by dragging
 * the GraphView).
 * TODO: Known issue: #graph-view is contained inside of the map, and can't
 *       make it close to the edges of the graph.
 */function setMapDragNavigation(){"use strict";var e=$("#graph-view"),t=$("#graph"),n=$("#map");e.draggable({containment:"#map"}),e.on("drag",function(){var e=[parseFloat($(this).css("top"))/parseFloat(n.height())*parseFloat(t.height()),parseFloat($(this).css("left"))/parseFloat(n.width())*parseFloat(t.width())];$("#scroll-content").mCustomScrollbar("scrollTo",e,{callbacks:!1,scrollInertia:250})})};/*global $ *//**
 * Sets the mouse callbacks for the nodes.
 */function setMouseCallbacks(){"use strict";var e=$("#graph").find(".node");e.mouseenter(function(e){updateParentCount($(this).children(".counter-text"),!0),hoverFocus(e)}).mouseleave(function(e){updateParentCount($(this).children(".counter-text"),!1),hoverUnfocus(e)}),setKeydown(),setChangeOrientationEvent()}function setKeydown(){"use strict";$(document).keydown(function(e){switch(e.keyCode){case 187:zoomIn();break;case 189:zoomOut()}$("#scroll-content").mCustomScrollbar("update")})}function setChangeOrientationEvent(){"use strict";var e="horizontal";$("#change-orientation").click(function(){window.graph.changeOrientation(e)})};/*global $ *//**
 * Creates a GraphMap object that allows the user to view an overview of
 * the main graph.
 *
 * @class GraphMap
 * @param id The id of the HTML map element.
 * @constructor
 */function GraphMap(e){"use strict";this.name=e,this.obj=$("#"+e)}GraphMap.prototype.initialize=function(){"use strict";this.obj.find("svg").attr("id","nav-graph").attr("height",svgHeight*.1).attr("width",svgWidth*.1),this.obj.find(".node").attr("data-active","display"),this.obj.find("path").attr("data-active","inactive"),this.obj.append('<div id="graph-view"></div>'),window["graph-view"]=new GraphView("graph-view"),this.setSize(),window["graph-view"].setSizes(),window["graph-view"].setDrag(),window["graph-view"].setClick(),window["nav-graph"].setupIDs(),window["nav-graph"].removeArrowHeads(),window["nav-graph"].removeText(),addScrollBackgroundHeight()},GraphMap.prototype.setSize=function(){"use strict";this.obj.css("height",Math.max($("#scroll-content").height(),$("#graph").height())*.1).css("width",svgWidth*.1),$("#button-container").attr("left",this.obj.width()+this.obj.attr("left"))};/*global $*//**
 * Creates a GraphView.
 * @class GraphView
 * @param id
 * @constructor
 */function GraphView(e){"use strict";this.id=e,this.obj=$("#graph-view")}GraphView.prototype.reset=function(){"use strict";$("#scroll-background-top").css("height",0),$("#scroll-background-bottom").css("height",scrollBackgroundHeight*zoom/100),this.resetHeight(),this.resetWidth(),this.resetXPosition(),this.resetYPostition()},GraphView.prototype.resetWidth=function(){"use strict";var e=$("#scroll-content");e.width()*.1*100/zoom<parseFloat($("#nav-graph").css("width"))?this.obj.css("width",e.width()*.1*100/zoom):this.obj.css("width",$("#map").css("width"))},GraphView.prototype.resetHeight=function(){"use strict";var e=$("#map"),t=$(".mCSB_container_wrapper");t.height()*.1*100/zoom<parseFloat(e.css("height"))?this.obj.animate({height:t.height()*.1*100/zoom}):this.obj.animate({height:e.css("height")})},GraphView.prototype.resetYPostition=function(){"use strict";var e=$("#scroll-content");this.obj.css("top",$("#nav-graph").height()*e.scrollTop()/100-this.obj.height()*e.scrollTop()/100)},GraphView.prototype.resetXPosition=function(){"use strict";var e=$("#scroll-content");this.obj.css("left",$("#nav-graph").width()*e.scrollLeft()/10-this.obj.width()*e.scrollLeft()/100)},GraphView.prototype.setSizes=function(){"use strict";var e=$("#scroll-content");$("#graph-view").css("width",e.width()*.1).css("height",e.height()*.1)},GraphView.prototype.setDrag=function(){"use strict";setMapDragNavigation()},GraphView.prototype.setClick=function(){"use strict";setMapClickNavigation()};/*global $ *//**
 * creates a NavGraph object.
 * @class NavGraph
 * @param id
 * @constructor
 */function NavGraph(e){"use strict";this.name=e,this.obj=$("#"+e)}NavGraph.prototype.updateNode=function(e){"use strict";var t="#"+e.attr("id")+"-map-node";$(t).attr("data-active","display-selected")},NavGraph.prototype.removeArrowHeads=function(){"use strict";$("#nav-graph").find("polygon").remove()},NavGraph.prototype.setupIDs=function(){"use strict";$("#nav-graph").find(".node").each(function(){$(this).attr("id",$(this).attr("id")+"-map-node")})},NavGraph.prototype.removeText=function(){"use strict";$("#nav-graph").find("text").remove()};/*global $ *//**
 * A Graph object. This represents the main SVG graph.
 *
 * @class Graph
 * @param id
 * @param orientation
 * @constructor
 */function Graph(e,t){"use strict";this.name=e,this.orientation=t,this.horizontalGraph=null,this.verticalGraph=null,$("svg:first").attr("id",e)}Graph.prototype.setup=function(){"use strict";processGraph(),setScrollableContent("x"),window.graph.vitalize(),addNodeDecorations(),window.graph.initializeUserData()},Graph.prototype.vitalize=function(){"use strict";window.map=new GraphMap("map"),window["nav-graph"]=new NavGraph("nav-graph"),getAbsoluteSizes(),window.map.initialize(),window.graph.build(),setMouseCallbacks(),window.graph.initializeSettings(),$("text").attr("id",function(e){return"text-"+e}),window["graph-view"].reset()},Graph.prototype.resetSize=function(){"use strict";$("#graph").attr("height",svgHeight*zoom/100).attr("width",svgWidth*zoom/100),$("#mCSB_1_container").css("width",svgWidth*zoom/100)},Graph.prototype.build=function(){"use strict";var e=$("#graph");e.find(".node").each(function(){makeNode($(this).attr("id"))}),e.find("path").each(function(){var e=$(this).attr("d").split(/[\s,HVL]/),t=parseFloat(e[0].substr(1)),n=parseFloat(e[1]),r=parseFloat(e.pop()),i=parseFloat(e.pop()),s="",o="";$("#graph").find(".node").each(function(){var e=$(this).children("rect"),u=parseFloat(e.attr("x")),a=parseFloat(e.attr("y")),f=parseFloat(e.attr("width")),l=parseFloat(e.attr("height"));intersects(t,n,u,a,f,l,20)&&(s=$(this).attr("id")),intersects(i,r,u,a,f,l,20)&&(o=$(this).attr("id"));if(s!==""&&o!=="")return!1}),makeEdge(window[s],window[o],$(this).attr("id"))})},Graph.prototype.initializeSettings=function(){"use strict";var e=$("#graph");e.find("path").attr("data-active","inactive"),e.find(".node").attr("data-active","inactive"),$.each(nodes,function(e,t){window[t].updateStatus(),window[t].updateSVG(),$.each(window[t].outEdges,function(e,t){t!==undefined&&t.updateStatus()})})},Graph.prototype.initializeUserData=function(){"use strict";var e=getJSON();$.each(e,function(e,t){t[0]===t[1]&&window["node-"+e].turn()})},Graph.prototype.changeOrientation=function(){"use strict";var e=$("#graph"),t=$("#scroll-content"),n=$("#nav-graph"),r=5e3,i=2e3,s="elastic";this.orientation=switchOrientation();var o=getGraph(this.orientation);resetScrollPosition(),resetZoom(),setViewBoxOfGraphs(o),$("#map").width(parseFloat($(o).attr("width"))*.1),updateAbsoluteSizes(o),animateGraphEdges(o,s,r),e.attr("width",$(o).attr("width")).attr("height",$(o).attr("height")),n.attr("width",parseFloat($(o).attr("width"))*.1).attr("height",parseFloat($(o).attr("height"))*.1),n.find("#graph0").attr("transform",$(o).find("#graph0").attr("transform")),d3.select("#graph0").transition().duration(r).attr("transform",$(o).find("#graph0").attr("transform")),setNewGraphCoordinates(o,s,r),animateNavGraphNodes(o,s,r),removeScrollbar(),this.orientation==="vertical"?(t.css("display","inline").animate({width:"80%"},i),$("#button-container").css("float","left").css("left",15),d3.select("#scroll-content").style("float","right"),$("#HUD").animate({width:"15%"},i).animate({height:"100%"},i),setScrollableContent("y")):(t.css("display","block").animate({width:"100%"},i),$("#button-container").css("float","right").css("left",0),d3.select("#scroll-content").transition().duration(i).style("float",""),$("#HUD").animate({height:"15%"},i).animate({width:"100%"},i),setScrollableContent("x")),setTimeout(function(){window["graph-view"].reset()},r),window.map.setSize()};/**
 * Makes an Edge with a parent Node parent and a child node child.
 *
 * @param {Node} parent The parent Node that the new Edge points from.
 * @param {Node} child The child Node that the new Edge points to.
 * @param {string} name The 'name' of the new Edge.
 */function makeEdge(e,t,n){"use strict";e!==undefined&&t!==undefined&&(window[n]=new Edge(e,t,n),e.outEdges.push(window[n]),t.inEdges.push(window[n]),e.children.push(t),t.parents.push(e))}function Edge(e,t,n){"use strict";this.parent=e,this.child=t,this.name=n,this.status="inactive"}Edge.prototype.updateSVG=function(){"use strict";$("#"+this.name).attr("data-active",this.status).parent().children("polygon").first().attr("data-active",this.status)},Edge.prototype.updateStatus=function(){"use strict";this.parent.isSelected()?this.child.isSelected()?this.status="active":this.status="doable":this.status="inactive",this.updateSVG()};/*global $*//**
 * Makes a Node.
 * @param {string} name - The name of the Node, also the id of the SVG
 *                        counterpart.
 */function makeNode(e){"use strict";window[e]=new Node(e),nodes.push(e)}function Node(e){"use strict";this.name=e,this.obj=$("#"+this.name),this.parents=[],this.children=[],this.outEdges=[],this.inEdges=[],this.status=""}Node.prototype.isSelected=function(){"use strict";return this.status==="active"||this.status==="overridden"},Node.prototype.arePrereqsSatisfied=function(){"use strict";var e=!0;for(var t=0;t<this.parents.length;t++)e=e&&this.parents[t].isSelected();return e},Node.prototype.updateSVG=function(){"use strict";this.obj.attr("data-active",this.status)},Node.prototype.focus=function(){"use strict";this.status!=="active"&&(this.status!=="overridden"&&this.obj.attr("data-active","missing"),$.each(this.inEdges,function(e,t){t.parent.status!=="active"&&$("#"+t.name).attr("data-active","missing").parent().children("polygon").first().attr("data-active","missing")}),$.each(this.parents,function(e,t){t.focus()}))},Node.prototype.unfocus=function(){"use strict";this.isSelected()||this.obj.attr("data-active",this.status),$.each(this.parents,function(e,t){t.unfocus()}),$.each(this.outEdges,function(e,t){t.updateStatus()})},Node.prototype.updateStatus=function(){"use strict";this.arePrereqsSatisfied()?this.isSelected()?this.status="active":this.status="doable":this.isSelected()?this.status="overridden":this.status="inactive",this.updateSVG()},Node.prototype.turn=function(){"use strict";this.status="active",this.obj.children(".counter-text").remove(),this.obj.children(".missing-counter").remove(),this.updateStatus(),$.each(this.children,function(e,t){t.updateStatus()}),$.each(this.outEdges,function(e,t){t.updateStatus()}),$.each(this.inEdges,function(e,t){t.updateStatus()}),this.updateSVG(),window["nav-graph"].updateNode(this.obj)};/*global $ */var nodes=[],zoom=100,svgWidth,svgHeight,graphViewWidth,graphViewHeight,scrollBackgroundHeight,orientation,horizontalGraph=null,verticalGraph=null;$(document).ready(function(){"use strict";appendGraph("horizontal"),window.graph.setup(),setInterval(pulseTakeable,1e3),setZoomInButtonFunctions()});/*global $ *//**
 * Sets the button click events for zoom and scrolling.
 */function setZoomInButtonFunctions(){"use strict";$("#zoomIn").click(function(){zoomIn(),$("#scroll-content").mCustomScrollbar("update")}),$("#zoomOut").click(function(){zoomIn(),$("#scroll-content").mCustomScrollbar("update")})}function zoomOut(){"use strict";zoom>10&&(zoom-=10),window.graph.resetSize(),window["graph-view"].reset()}function zoomIn(){"use strict";zoom<200&&(zoom+=10),window.graph.resetSize(),window["graph-view"].reset()};!function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?module.exports=e:e(jQuery)}(function(e){function t(t){var o=t||window.event,u=a.call(arguments,1),f=0,c=0,p=0,d=0,v=0,m=0;if(t=e.event.fix(o),t.type="mousewheel","detail"in o&&(p=-1*o.detail),"wheelDelta"in o&&(p=o.wheelDelta),"wheelDeltaY"in o&&(p=o.wheelDeltaY),"wheelDeltaX"in o&&(c=-1*o.wheelDeltaX),"axis"in o&&o.axis===o.HORIZONTAL_AXIS&&(c=-1*p,p=0),f=0===p?c:p,"deltaY"in o&&(p=-1*o.deltaY,f=p),"deltaX"in o&&(c=o.deltaX,0===p&&(f=-1*c)),0!==p||0!==c){if(1===o.deltaMode){var g=e.data(this,"mousewheel-line-height");f*=g,p*=g,c*=g}else if(2===o.deltaMode){var y=e.data(this,"mousewheel-page-height");f*=y,p*=y,c*=y}if(d=Math.max(Math.abs(p),Math.abs(c)),(!s||s>d)&&(s=d,r(o,d)&&(s/=40)),r(o,d)&&(f/=40,c/=40,p/=40),f=Math[f>=1?"floor":"ceil"](f/s),c=Math[c>=1?"floor":"ceil"](c/s),p=Math[p>=1?"floor":"ceil"](p/s),l.settings.normalizeOffset&&this.getBoundingClientRect){var b=this.getBoundingClientRect();v=t.clientX-b.left,m=t.clientY-b.top}return t.deltaX=c,t.deltaY=p,t.deltaFactor=s,t.offsetX=v,t.offsetY=m,t.deltaMode=0,u.unshift(t,f,c,p),i&&clearTimeout(i),i=setTimeout(n,200),(e.event.dispatch||e.event.handle).apply(this,u)}}function n(){s=null}function r(e,t){return l.settings.adjustOldDeltas&&"mousewheel"===e.type&&t%120===0}var i,s,o=["wheel","mousewheel","DOMMouseScroll","MozMousePixelScroll"],u="onwheel"in document||document.documentMode>=9?["wheel"]:["mousewheel","DomMouseScroll","MozMousePixelScroll"],a=Array.prototype.slice;if(e.event.fixHooks)for(var f=o.length;f;)e.event.fixHooks[o[--f]]=e.event.mouseHooks;var l=e.event.special.mousewheel={version:"3.1.12",setup:function(){if(this.addEventListener)for(var n=u.length;n;)this.addEventListener(u[--n],t,!1);else this.onmousewheel=t;e.data(this,"mousewheel-line-height",l.getLineHeight(this)),e.data(this,"mousewheel-page-height",l.getPageHeight(this))},teardown:function(){if(this.removeEventListener)for(var n=u.length;n;)this.removeEventListener(u[--n],t,!1);else this.onmousewheel=null;e.removeData(this,"mousewheel-line-height"),e.removeData(this,"mousewheel-page-height")},getLineHeight:function(t){var n=e(t),r=n["offsetParent"in e.fn?"offsetParent":"parent"]();return r.length||(r=e("body")),parseInt(r.css("fontSize"),10)||parseInt(n.css("fontSize"),10)||16},getPageHeight:function(t){return e(t).height()},settings:{adjustOldDeltas:!0,normalizeOffset:!0}};e.fn.extend({mousewheel:function(e){return e?this.bind("mousewheel",e):this.trigger("mousewheel")},unmousewheel:function(e){return this.unbind("mousewheel",e)}})});/*global $ *//**
 * When the window is re-sized, the map needs to be re-sized to reflect what
 * the user is currently viewing.
 * TODO: When the user has a browser zoomed in, the map will not resize
 * properly when the browser is re-sized.
 */function getAbsoluteSizes(){"use strict";var e=$("svg"),t=$("#graph-view");svgWidth=e.width(),svgHeight=e.height(),graphViewWidth=t.width(),graphViewHeight=t.height()}function addScrollBackgroundHeight(){"use strict";scrollBackgroundHeight=$("#mCSB_1_container_wrapper").height()-$("#graph").height(),$("#scroll-background-top").css("height",scrollBackgroundHeight/2*zoom/100),$("#scroll-background-bottom").css("height",scrollBackgroundHeight/2*zoom/100)}$(window).resize(function(){"use strict";window.graph.resetSize(),window["graph-view"].reset(),window.map.setSize()});/*global $, d3*//**
 * Sets the new coordinates of the rects, text, counter rects, and counter
 * texts.
 * // TODO: Find out why below helper functions don't work.
 * @param newGraph The SVG content of the new graph.
 * @param ease The ease attribute of the d3 transitions.
 *             (Ex: 'linear','elastic'...)
 *             Refer to
 *             http://blog.vctr.me/experiments/transition-tweens.html
 *             for good examples.
 * @param transitionDuration The duration the d3 transitions take.
 */function setNewGraphCoordinates(e,t,n){"use strict";$.each($(e).find(".node"),function(e,r){var i=$("#graph").find("#"+$(this).attr("id")).find("text"),s=$("#"+$(r).attr("id"));d3.select("#graph").select("#"+$(this).attr("id")).select("rect").transition().duration(n).ease(t).attr({x:$(r).find("rect").attr("x"),y:$(r).find("rect").attr("y")}),$(i).each(function(e){var i=$(r).find("text").get(e),o=$(s).find("text").get(e);d3.select("#"+$(r).attr("id")).select("#"+$(o).attr("id")).transition().duration(n).ease(t).attr({x:$(i).attr("x"),y:$(i).attr("y")})}),d3.select("#graph").select("#"+$(this).attr("id")).select(".missing-counter").transition().duration(n).ease(t).attr({x:parseFloat($(r).find(".rect").attr("x"))+parseFloat($(r).find(".rect").attr("width"))-25,y:parseFloat($(r).find(".rect").attr("y"))+(parseFloat($(r).find(".rect").attr("height"))-20)/2}),d3.select("#graph").select("#"+$(this).attr("id")).select(".counter-text").transition().duration(n).ease(t).attr({x:parseFloat($(r).find(".rect").attr("x"))+parseFloat($(r).find(".rect").attr("width"))-15,y:parseFloat($(r).find(".rect").attr("y"))+(parseFloat($(r).find(".rect").attr("height"))+10)/2})})}function setViewBoxOfGraphs(e){"use strict";var t=getViewBox(e);document.getElementsByTagName("svg")[0].setAttribute("viewBox",t),document.getElementsByTagName("svg")[1].setAttribute("viewBox",t)}function getViewBox(e){"use strict";var t=e.indexOf("viewbox"),n=e.substring(t+9);return t=n.indexOf('"'),n.substring(0,t)}function animateNavGraphNodes(e,t,n){"use strict";$.each($(e).find(".node"),function(e,r){d3.select("#nav-graph").select("#"+$(this).attr("id")+"-map-node").select("rect").transition().duration(n).ease(t).attr({x:$(r).find("rect").attr("x"),y:$(r).find("rect").attr("y")}).attr("end",function(){window["graph-view"].reset()})})}function animateGraphEdges(e,t,n){"use strict";$.each($(e).find(".edge"),function(){d3.select("#"+$(this).attr("id")).select("path").transition().duration(n).ease(t).attr("d",$(this).find("path").attr("d")),d3.select("#"+$(this).attr("id")).selectAll("polygon").transition().duration(n).ease(t).attr("points",$(this).find("polygon").attr("points"))})}function updateAbsoluteSizes(e){"use strict";svgWidth=parseFloat($(e).attr("width"))*4/3,svgHeight=parseFloat($(e).attr("height"))*4/3}function resetZoom(){"use strict";zoom=100}function resetScrollPosition(){"use strict";$("#scroll-content").mCustomScrollbar("scrollTo","0")}function switchOrientation(){"use strict";return window.graph.orientation==="horizontal"?"vertical":"horizontal"}function removeScrollbar(){"use strict";$("#scroll-content").mCustomScrollbar("destroy")};/*global svgHeight, svgWidth*//*global $ *//**
 * Sets the custom scroll bar of the graph.
 * @param mousewheelAxis The axis that the mouse wheel acts on.
 */function setScrollableContent(e){"use strict";$("#scroll-content").mCustomScrollbar({axis:"xy",theme:"dark",mouseWheel:{enable:!0,axis:e,scrollAmount:500},advanced:{updateOnContentResize:!0},keyboard:{scrollAmount:50},callbacks:{whileScrolling:function(){var e=$("#graph-view");e.css("left",2+fixVal($("#nav-graph").width()*this.mcs.leftPct/100-e.width()*this.mcs.leftPct/100)),e.css("top",fixVal($("#map").height()*this.mcs.topPct/100-e.height()*this.mcs.topPct/100))}}})}function fixVal(e){"use strict";return parseFloat(e)%2!==0&&(e-=e%2),e};/*global $ *//**
 * Returns whether px and py intersects with a rectangle starting at rx and ry,
 * with corresponding widths and heights to the parameters.
 * @param px The x position of the evaluated point.
 * @param py The y position of the evaluated point.
 * @param rx The x start point of the evaluated rectangle.
 * @param ry The y start point of the evaluated rectangle.
 * @param width The width of the evaluated rectangle.
 * @param height The height of the evaluated rectangle.
 * @param offset The offset of the intersection.
 * @returns {boolean} Whether the evaluated point intersects with the
 *                    evaluated rectangle with the calculated offset.
 */function intersects(e,t,n,r,i,s,o){"use strict";var u=e-n,a=t-r;return u>=-1*o&&u<=i+o&&a>=-1*o&&a<=s+o}function hoverFocus(e){"use strict";var t=e.target.parentNode.id;window[t].focus()}function hoverUnfocus(e){"use strict";var t=e.target.parentNode.id;window[t].unfocus()}function getJSON(){"use strict";var e=null;return $.ajax({url:"prereq_graph/for_user",dataType:"text",async:!1,success:function(t){e=t}}),$.parseJSON(e)}function pulseTakeable(){"use strict";$(nodes).each(function(e,t){var n="#"+t;window[t].status==="doable"?$(n).css("opacity")>.9?$(n).fadeTo("slow",.4):$(n).fadeTo("slow",1):window[t].status==="active"&&$(n).fadeTo("fast",1)})};/*global $ *//*global document *//*global appendGraph *//*global processGraph *//*global setScrollableContent *//*global setMainGraphID *//*global addNodeDecorations *//*global appendCounterRect *//*global window *//*global getNonActiveParentNames *//*global vitalizeGraph *//**
 * Adds additional attributes to the svg output.
 */function processGraph(){"use strict";$("polygon[fill*=white]").attr("fill","none"),$("path").css("fill","none").attr("id",function(e){return"p"+e})}function getGraph(e){"use strict";var t=null;return e==="vertical"&&verticalGraph!==null?verticalGraph:e==="horizontal"&&horizontalGraph!==null?horizontalGraph:(orientation=e,$.ajax({url:root+"/content/challenges/prereq_graph/generate_"+e,dataType:"text",async:!1,success:function(e){t=e}}),e==="vertical"?verticalGraph=t:e==="horizontal"&&(horizontalGraph=t),t)}function appendGraph(e){"use strict";orientation=e;var t=getGraph(e);$(t).insertBefore($("#scroll-background-bottom")),$("#map").append(t),window.graph=new Graph("graph",orientation)}function addNodeDecorations(){"use strict";$("#graph").find(".node").each(function(e){appendCounterRect($(this),e)})}function updateParentCount(e,t){"use strict";var n=window[e.parent().attr("id")];e.empty();if(t&&n!==undefined){$(e).parent().children(".missing-counter").css("visibility","visible");var r=document.createTextNode(getNonActiveParentNames(n).length.toString());e.append(r)}else $(e).parent().children(".missing-counter").css("visibility","hidden")}function getNonActiveParentNames(e){"use strict";var t=[],n;if(e.parents.length===0)return[];for(var r=0;r<e.parents.length;r++)if(e.parents[r].status!=="active"&&e.parents[r].status!=="overridden"){t.push(e.parents[r].name),n=getNonActiveParentNames(e.parents[r]);for(var i=0;i<n.length;i++)$.inArray(n[i],t)===-1&&t.push(n[i])}return t}function appendCounterRect(e,t){"use strict";var n=createOptionRect("counter-rect-",t,parseInt(e.children(".rect").attr("x"))+parseInt(e.children(".rect").attr("width"))-25,parseInt(e.children(".rect").attr("y"))+parseInt(e.children(".rect").attr("height")-20)/2,"none","#3399FF","missing-counter"),r=createOptionText("counter-text-",t,parseInt(e.children(".rect").attr("x"))+parseInt(e.children(".rect").attr("width"))-15,parseInt(e.children(".rect").attr("y"))+(parseInt(e.children(".rect").attr("height"))+10)/2,"counter-text");n.insertBefore(e.children("text").first()),r.insertAfter(e.children("text").last())}function createOptionRect(e,t,n,r,i,s,o){"use strict";return $(document.createElementNS("http://www.w3.org/2000/svg","rect")).attr({id:e+t,x:n,y:r,rx:10,ry:10,fill:i,stroke:s,width:20,height:20,"class":o})}function createOptionText(e,t,n,r,i){"use strict";return $(document.createElementNS("http://www.w3.org/2000/svg","text")).attr({id:e+t,x:n,y:r,rx:10,ry:10,width:20,height:20,"text-anchor":"middle","font-family":"Times,serif","class":i})};